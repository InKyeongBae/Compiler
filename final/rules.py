RULES = {'0': 'START -> CODE',
         '1': 'CODE -> VDECL CODE',
         '2': 'CODE -> FDECL CODE',
         '3': 'CODE -> CDECL CODE',
         '4': 'CODE -> epsilon',
         '5': 'VDECL -> vtype id semi',
         '6': 'VDECL -> vtype ASSIGN semi',
         '7': 'ASSIGN -> id assign RHS',
         '8': 'RHS -> EXPR',
         '9': 'RHS -> literal',
         '10': 'RHS -> character',
         '11': 'RHS -> boolstr',
         '12': 'EXPR -> TERM addsub EXPR',
         '13': 'EXPR -> TERM',
         '14': 'TERM -> FACTOR multdiv TERM',
         '15': 'TERM -> FACTOR',
         '16': 'FACTOR -> lparen EXPR rparen',
         '17': 'FACTOR -> id',
         '18': 'FACTOR -> num',
         '19': 'FDECL -> vtype id lparen ARG rparen lbrace BLOCK RETURN rbrace',
         '20': 'ARG -> vtype id MOREARGS',
         '21': 'ARG -> epsilon',
         '22': 'MOREARGS -> comma vtype id MOREARGS',
         '23': 'MOREARGS -> epsilon',
         '24': 'BLOCK -> STMT BLOCK',
         '25': 'BLOCK -> epsilon',
         '26': 'STMT -> VDECL',
         '27': 'STMT -> ASSIGN semi',
         '28': 'STMT -> if lparen COND rparen lbrace BLOCK rbrace ELSE',
         '29': 'STMT -> while lparen COND rparen lbrace BLOCK rbrace',
         '30': 'COND -> T comp T',
         '31': 'COND -> T',
         '32': 'T -> lparen COND rparen',
         '33': 'T -> boolstr',
         '34': 'ELSE -> else lbrace BLOCK rbrace',
         '35': 'ELSE -> epsilon',
         '36' : 'RETURN -> return RHS semi',
         '37' : 'CDECL -> class id lbrace ODECL rbrace',
         '38' : 'ODECL -> VDECL ODECL',
         '39' : 'ODECL -> FDECL ODECL',
         '40' : 'epsilone'}